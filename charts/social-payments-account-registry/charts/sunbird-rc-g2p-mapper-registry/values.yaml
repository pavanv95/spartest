# TODO: Create helm chart for mapper ui and callback service

global:
  hostname: mapper.openg2p.sandbox.net

replicaCount: 1
image:
  repository: openg2p/sunbird-rc-g2p-mapper-registry
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

containerPort: 8766

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /v0.1.0/$2
    # kubernetes.io/tls-acme: "true"
  hosts:
    - paths:
        - path: /mapper/v0.1.0(/|$)(.*)
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  #  requests:
  #    cpu: 500m
  #    memory: 2G

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

envVars:
  REGISTRY_URL: 'http://{{ include "registry.fullname" .Subcharts.registry }}/'
  CALLBACK_SERVICE_URL: 'http://{{ include "mapper.fullname" . }}-callback-service/'

envVarsFrom: {}

istio:
  enabled: true
  virtualservice:
    enabled: true
    host: ""
    gateway: "istio-system/all-hosts"
    prefix: "/mapper/v0.1.0"
    rewriteUri: "/v0.1.0"
  gateway:
    enabled: false
    host: ""
    ingressController:
      istio: ingressgateway
    httpTlsRedirect: true
    tls:
      enabled: true
      mode: SIMPLE
      credentialName: ""
    
registry:
  istio:
    virtualservice:
      prefix: /mapper/registry
  hosts:
    - paths:
        - path: /mapper/registry(/|$)(.*)
          pathType: ImplementationSpecific

  postgresql:
    enabled: true

  elasticsearch:
    enabled: true
    global:
      kibanaEnabled: false
